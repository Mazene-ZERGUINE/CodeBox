name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      rabbitmq:
        image: rabbitmq:3.8-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11, 3.12]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # tools for CI reporting (optional but useful)
          pip install coverage pytest pytest-django pytest-cov junit-xml

      - name: Django checks & migrate
        run: |
          python manage.py check
          python manage.py migrate --noinput
          # Optional: static files if needed by tests
          # python manage.py collectstatic --noinput

      - name: Run tests (pytest with coverage)
        run: |
          pytest -q \
            --ds=$DJANGO_SETTINGS_MODULE \
            --cov=. --cov-report=term-missing \
            --junitxml=reports/junit.xml

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-py${{ matrix.python-version }}
          path: |
            reports/junit.xml
            .coverage
            coverage.xml
          if-no-files-found: ignore

      - name: Fail job if no tests ran
        if: success() && !cancelled()
        run: |
          [ -f reports/junit.xml ] || { echo "No test report generated."; exit 1; }
